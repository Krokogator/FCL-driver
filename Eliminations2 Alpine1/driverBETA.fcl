FUNCTION_BLOCK driver

VAR_INPUT
  // angles {-90,-75,-60,-45,-30,-20,-15,-10,-5,0,5,10,15,20,30,45,60,75,90}
  track0: REAL;
  track1: REAL;
  track2: REAL;
  track3: REAL;
  track4: REAL;
  track5: REAL;
  track6: REAL;
  track7: REAL;
  track8: REAL;
  // angle 0
  track9: REAL;
  track10: REAL;
  track11: REAL;
  track12: REAL;
  track13: REAL;
  track14: REAL;
  track15: REAL;
  track16: REAL;
  track17: REAL;
  track18: REAL;
  
  trackPos: REAL;
  speed: REAL;
  
  opponent0: REAL;
  opponent1: REAL;
  opponent2: REAL;
  opponent3: REAL;
  opponent4: REAL;
  opponent5: REAL;
  opponent6: REAL;
  opponent7: REAL;
  opponent8: REAL;
  opponent9: REAL;
  opponent10: REAL;
  opponent11: REAL;
  opponent12: REAL;
  opponent13: REAL;
  opponent14: REAL;
  opponent15: REAL;
  opponent16: REAL;
  opponent17: REAL;
  opponent18: REAL;
  opponent19: REAL;
  opponent20: REAL;
  opponent21: REAL;
  opponent22: REAL;
  opponent23: REAL;
  opponent24: REAL;
  opponent25: REAL;
  opponent26: REAL;
  opponent27: REAL;
  opponent28: REAL;
  opponent29: REAL;
  opponent30: REAL;
  opponent31: REAL;
  opponent32: REAL;
  opponent33: REAL;
  opponent34: REAL;
  opponent35: REAL;
  
  angle: REAL;
END_VAR

VAR_OUTPUT
  steering: REAL;
  accelerate: REAL;
  brake: REAL;
END_VAR

FUZZIFY trackPos
  TERM left := (0.3, 0) (0.6, 1) (1,1);
  TERM center := (-0.6, 0) (-0.3, 1) (0.3, 1) (0.6, 0);
  TERM right := (-1, 1) (-0.6, 1) (-0.3, 0);
END_FUZZIFY

FUZZIFY angle
  TERM left := (-5.15, 1) (-0.3, 1) (0, 0);
  TERM center := (-0.3, 0) (0, 1) (0.3, 0);
  TERM right := (0, 0) (0.3, 1) (5.15, 1);
END_FUZZIFY

//0 stopni

FUZZIFY track9
  TERM f010 := (0, 1) (5, 1) (7, 0);
  TERM f060 := (0, 1) (60, 1) (65, 0);
END_FUZZIFY

//20 stopni

FUZZIFY track5 
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

FUZZIFY track13
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

//45 stopni

FUZZIFY track3
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

FUZZIFY track15
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

//60 stopni

FUZZIFY track2
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

FUZZIFY track16
	TERM f40 := (13, 0) (18, 1) (200, 1);
END_FUZZIFY

//90 stopni

FUZZIFY track0
	TERM close := (0,1)(1,1)(2,0);
END_FUZZIFY

FUZZIFY track18
	TERM close := (0,1)(1,1)(2,0);
END_FUZZIFY

FUZZIFY speed
  TERM cornering := (170,0)(180,1)(191, 1)(210, 0);
  TERM f150250 := (199, 0) (200, 1) (250, 1);
  TERM f120250 := (119, 0) (120, 1) (250, 1);
  TERM f50100 := (49, 0) (50, 1) (100, 1) (105, 0);
END_FUZZIFY

DEFUZZIFY steering
  TERM left3 := (0.8, 0) (1, 1);
  TERM left2 :=  (0.7, 0) (0.8, 1) (0.9, 0);
  TERM left1 := (0.05,0)(0.1,1)(0.2,0);
  TERM center :=  (-0.1, 0) (0, 1) (0.1, 0);
  TERM right1 := (-0.2,0)(-0.1,1)(-0.05,0);
  TERM right2 :=  (-0.9, 0) (-0.8, 1) (-0.7, 0);
  TERM right3 := (-1, 1) (-0.8, 0);


  METHOD : COG;
  DEFAULT := 0.000;
END_DEFUZZIFY

DEFUZZIFY accelerate
  TERM nogas :=  (0, 1) (0.3, 1) (0.5, 0);
  TERM medgas :=  (0.3, 0) (0.7, 1) (0.8, 0);
  TERM fullgas :=  (0.99, 1) (1, 1);
  METHOD : COG;
  DEFAULT := 1.000;
END_DEFUZZIFY

DEFUZZIFY brake
  TERM nobrake :=  (0, 1) (0.001, 0);
  TERM fullbrake :=  (0.035, 0) (0.1, 1) (1, 1);
  METHOD : COG;
  DEFAULT := 0.000;
END_DEFUZZIFY

RULEBLOCK No1
  AND : MIN;
  ACT : MIN;
  ACCU : MAX;

//brake rules  
  RULE 1 : IF track9 IS f060 AND speed IS f150250 THEN brake IS fullbrake,accelerate IS nogas;
  RULE 2 : IF track9 IS f010 AND speed IS f50100 THEN accelerate IS nogas;
  
//left turn
  RULE 5 : IF track2 IS f40 THEN steering IS left3;
  RULE 6 : IF track3 IS f40 THEN steering IS left3;
  RULE 7 : IF track5 IS f40 THEN steering IS left2;
//right turn
  RULE 8 : IF track16 IS f40 THEN steering IS right3;
  RULE 9 : IF track15 IS f40 THEN steering IS right3;
  RULE 10 : IF track13 IS f40 THEN steering IS right2;

//steer center
 


  
END_RULEBLOCK

END_FUNCTION_BLOCK

  RULE 2 : IF track15 IS NOT f010 THEN steering IS right3;
  RULE 3 : IF track3 IS NOT f010 THEN steering IS left3;
  
  RULE 4 : IF track5 IS NOT f020 THEN steering IS left2;
  RULE 5 : IF track13 IS NOT f020 THEN steering IS right2;